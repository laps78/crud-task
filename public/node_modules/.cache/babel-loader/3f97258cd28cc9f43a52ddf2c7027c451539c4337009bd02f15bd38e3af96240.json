{"ast":null,"code":"var _jsxFileName = \"/home/laps/\\u041F\\u0440\\u043E\\u0435\\u043A\\u0442\\u044B/GITHUB/Netology-hw/ra16-homeworks/lifecycle-http/crud-task/src/components/CRUD_form/CRUD_form.js\";\nimport './CRUD_form.css';\nimport { nanoid } from 'nanoid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction CRUD_form(_ref) {\n  let {\n    addCrud\n  } = _ref;\n  const postData = async function () {\n    let url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    let data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const responce = await fetch(url, {\n      method: 'POST',\n      'Content-Type': 'application/json',\n      body: JSON.stringify(data)\n    });\n    return responce.json();\n  };\n  const formSubmitHandler = evt => {\n    evt.preventDefault();\n    const formCurrentValue = evt.target.textarea.value;\n    if (formCurrentValue.length > 0) {\n      const newData = {\n        id: nanoid(),\n        note: formCurrentValue\n      };\n      postData('http://localhost:7777/notes', newData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"CRUD_form_wrapper\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"CRUD_form\",\n      onSubmit: formSubmitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"textarea\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"form_textarea\",\n        name: \"textarea\",\n        placeholder: ``,\n        rows: \"5\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"form_submit_button\",\n        type: \"submit\",\n        children: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 4\n  }, this);\n}\n_c = CRUD_form;\nexport default CRUD_form;\nvar _c;\n$RefreshReg$(_c, \"CRUD_form\");","map":{"version":3,"names":["nanoid","jsxDEV","_jsxDEV","CRUD_form","_ref","addCrud","postData","url","arguments","length","undefined","data","responce","fetch","method","body","JSON","stringify","json","formSubmitHandler","evt","preventDefault","formCurrentValue","target","textarea","value","newData","id","note","className","children","onSubmit","htmlFor","fileName","_jsxFileName","lineNumber","columnNumber","name","placeholder","rows","type","_c","$RefreshReg$"],"sources":["/home/laps/Проекты/GITHUB/Netology-hw/ra16-homeworks/lifecycle-http/crud-task/src/components/CRUD_form/CRUD_form.js"],"sourcesContent":["import './CRUD_form.css' ;\nimport { nanoid } from 'nanoid';\n\nfunction CRUD_form({ addCrud }) {\n  const postData = async (url = '', data = {}) => {\n    const responce = await fetch(url, {\n      method: 'POST',\n      'Content-Type': 'application/json',\n      body: JSON.stringify(data)\n    });\n    return responce.json();\n  }\n  const formSubmitHandler = (evt) => {\n    evt.preventDefault();\n    const formCurrentValue = evt.target.textarea.value;\n    if (formCurrentValue.length > 0) {\n      const newData = {\n        id: nanoid(),\n        note: formCurrentValue,\n      };\n      postData('http://localhost:7777/notes', newData);\n    }\n  }\n return (\n   <div className=\"CRUD_form_wrapper\">\n    <form className=\"CRUD_form\" onSubmit={formSubmitHandler}>\n      <label htmlFor=\"textarea\"></label>\n       <textarea className=\"form_textarea\" name=\"textarea\" placeholder={``} rows=\"5\"></textarea>\n       <button className=\"form_submit_button\" type=\"submit\">submit</button>\n    </form>\n   </div>); \n}\n\nexport default CRUD_form;\n"],"mappings":";AAAA,OAAO,iBAAiB;AACxB,SAASA,MAAM,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,SAASA,CAAAC,IAAA,EAAc;EAAA,IAAb;IAAEC;EAAQ,CAAC,GAAAD,IAAA;EAC5B,MAAME,QAAQ,GAAG,eAAAA,CAAA,EAA+B;IAAA,IAAxBC,GAAG,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,EAAE;IAAA,IAAEG,IAAI,GAAAH,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAG,CAAC,CAAC;IACzC,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACN,GAAG,EAAE;MAChCO,MAAM,EAAE,MAAM;MACd,cAAc,EAAE,kBAAkB;MAClCC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC3B,CAAC,CAAC;IACF,OAAOC,QAAQ,CAACM,IAAI,EAAE;EACxB,CAAC;EACD,MAAMC,iBAAiB,GAAIC,GAAG,IAAK;IACjCA,GAAG,CAACC,cAAc,EAAE;IACpB,MAAMC,gBAAgB,GAAGF,GAAG,CAACG,MAAM,CAACC,QAAQ,CAACC,KAAK;IAClD,IAAIH,gBAAgB,CAACb,MAAM,GAAG,CAAC,EAAE;MAC/B,MAAMiB,OAAO,GAAG;QACdC,EAAE,EAAE3B,MAAM,EAAE;QACZ4B,IAAI,EAAEN;MACR,CAAC;MACDhB,QAAQ,CAAC,6BAA6B,EAAEoB,OAAO,CAAC;IAClD;EACF,CAAC;EACF,oBACExB,OAAA;IAAK2B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,eACjC5B,OAAA;MAAM2B,SAAS,EAAC,WAAW;MAACE,QAAQ,EAAEZ,iBAAkB;MAAAW,QAAA,gBACtD5B,OAAA;QAAO8B,OAAO,EAAC;MAAU;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,eACjClC,OAAA;QAAU2B,SAAS,EAAC,eAAe;QAACQ,IAAI,EAAC,UAAU;QAACC,WAAW,EAAG,EAAE;QAACC,IAAI,EAAC;MAAG;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAY,eACzFlC,OAAA;QAAQ2B,SAAS,EAAC,oBAAoB;QAACW,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAM;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAChE;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AACT;AAACK,EAAA,GA5BQtC,SAAS;AA8BlB,eAAeA,SAAS;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}